/* 1953729 信09 吴浩泽 */

/* 函数实现部分，{ }内的东西可以任意调整，目前的return 0只是一个示例，可改变 */

/* 不允许定义任何形式的外部全局、静态全局、宏定义、只读变量 */

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlen(const char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int t = 0;
    for (; str[t] != '\0'; )
        t++;
    return t; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcat(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = tj_strlen(s1);
    int j = 0;
    for (; s2[j] != '\0'; i++, j++)
        s1[i] = s2[j];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncat(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; s1[i] != '\0';)
        i++;
    int j = 0;
    for (; s2[j] != '\0' && j < len; i++, j++)
        s1[i] = s2[j];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcpy(char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; s2[i] != '\0'; i++)
        s1[i] = s2[i];
    s1[i] = '\0';
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncpy(char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; s2[i] != '\0' && i < len; i++)
        s1[i] = s2[i];
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; s1[i] == s2[i] && s1[i] != '\0' && s2[i] != '\0';)
        i++;
    if (s1[i] == '\0' && s2[i] == '\0')
        return 0;
    else
        return s1[i] - s2[i];//return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasecmp(const char s1[], const char s2[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    for (int i = 0; s1[i] != '\0' || s2[i] != '\0'; i++)
    {
        int j = 0, k = 0;
        if (s1[i] >= 'A' && s1[i] <= 'Z')
            j = 32;
        if (s2[i] >= 'A' && s2[i] <= 'Z')
            k = 32;
        if (s1[i] + j != s2[i] + k)
            return s1[i] + j - s2[i] - k;
    }
    return 0;//return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strncmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; i < len && s1[i] != '\0' && s2[i] != '\0'; i++)
        if (s1[i] != s2[i])
            return s1[i] - s2[i];
    if (i == len)
        return 0;
    else
        return s1[i] - s2[i]; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strcasencmp(const char s1[], const char s2[], const int len)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; i < len && s1[i] != '\0' && s2[i] != '\0'; i++)
    {
        int j = 0, k = 0;
        if (s1[i] >= 'A' && s1[i] <= 'Z')
            j = 32;
        if (s2[i] >= 'A' && s2[i] <= 'Z')
            k = 32;
        if (!(s1[i] + j == s2[i] + k))
            return s1[i] + j - s2[i] - k;
    }
    if (i == len)
        return 0;
    else
    {
        int j = 0, k = 0;
        if (s1[i] >= 'A' && s1[i] <= 'Z')
            j = 32;
        if (s2[i] >= 'A' && s2[i] <= 'Z')
            k = 32;
        return s1[i] + j - s2[i] - k;
    }
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strupr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0'; i++)
        if (str[i] >= 'a' && str[i] <= 'z')
            str[i] = str[i] - 32;
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strlwr(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0'; i++)
        if (str[i] >= 'A' && str[i] <= 'Z')
            str[i] = str[i] + 32;
    return 0; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strchr(const char str[], char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0'; i++)
        if (str[i] == ch)
            break;
    if (str[i] == '\0')
        return 0;
    else
        return i + 1; //return值可根据需要修改
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0'; i++)
    {
        if (str[i] == substr[0])
        {
            int j = i;
            int k = 0;
            for (; substr[k] != '\0'; k++, j++)
                if (str[j] != substr[k])
                    break;
            if (substr[k] == '\0')
                break;
        }
    }
    if (str[i] == '\0')
        return 0;
    else
        return i + 1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrchr(const char str[], const char ch)
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0'; i++)
    {
        if (str[i] == ch)
        {
            int j = i + 1;
            for (; str[j] != '\0'; j++)
            {
                if (str[j] == ch)
                    break;
            }
            if (str[j] == '\0')
                break;
        }
    }
    if (str[i] == '\0')
        return 0;
    else
        return i + 1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrstr(const char str[], const char substr[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0'; i++)
    {
        if (str[i] == substr[0])
        {
            int j = i;
            int k = 0;
            for (; substr[k] != '\0'; k++, j++)
            {
                if (str[j] != substr[k])
                    break;
            }
            if (substr[k] == '\0')
            {
                int x = i + 1;
                int z = 0;
                for (; str[x] != '\0'; x++)
                {
                    if (str[x] == substr[0])
                    {
                        int y = x;
                        z = 0;
                        for (; substr[z] != '\0'; y++, z++)
                        {
                            if (str[y] != substr[z])
                                break;
                        }
                        if (substr[z] == '\0')
                            break;
                    }
                }
                if (substr[z] != '\0')
                    break;
            }
        }
    }
    if (str[i] == '\0')
        return 0;
    else
        return i + 1;
}

/***************************************************************************
  函数名称：
  功    能：
  输入参数：
  返 回 值：
  说    明：
***************************************************************************/
int tj_strrev(char str[])
{
    /* 注意：函数内不允许定义任何形式的数组（包括静态数组） */
    int i = 0;
    for (; str[i] != '\0';)
        i++;
    int j = 0;
    char t;
    for (; j < i / 2; j++)
    {
        t = str[j];
        str[j] = str[i - 1 - j];
        str[i - 1 - j] = t;
    }
    return 0; //return值可根据需要修改
}
